{"version":3,"sources":["components/Button/Button.module.css","components/ImageItem/ImageItem.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/Loader/Loader.js","components/Button/Button.js","components/ImageItem/ImageItem.js","components/ImageGallery/ImageGallery.js","components/Modal/Modal.js","components/ImageModal/ImageModal.js","services/api.js","App.js","index.js","components/ImageGallery/ImageGallery.module.css","components/Modal/Modal.module.css"],"names":["module","exports","Searchbar","state","query","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","className","styles","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Component","Loader","Button","fetchImages","onClick","ImageItem","webformatURL","onSetImageLarge","largeImageURL","src","alt","ImageGalleryItemImage","ImageGallery","images","map","ImageGalleryItem","key","Modal","window","addEventListener","code","onClose","Overlay","children","ImageModal","largeImage","defaultProps","searchQuery","page","apiKey","axios","get","then","response","data","hits","App","isLoading","error","imagesApi","prevState","catch","finally","handlerSearchFormSubmit","toggleModal","setlargeImage","url","prevProps","prevQuery","nextQuery","prevImages","nextImages","scroll","scrollTo","top","document","documentElement","scrollHeight","behavior","length","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5840c5ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__29Tpq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItemImage\":\"ImageItem_ImageGalleryItemImage__173ae\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3YXwE\",\"SearchForm\":\"Searchbar_SearchForm__2qpzk\",\"SearchFormButton\":\"Searchbar_SearchFormButton__2W5m0\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__pjwM7\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2SgP3\"};","import React, { Component } from 'react';\r\nimport styles from './Searchbar.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ query: e.target.value });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <header className={styles.Searchbar}>\r\n          <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\r\n            <button type=\"submit\" className={styles.SearchFormButton}>\r\n              <span className={styles.SearchFormButtonLabel}>Search </span>\r\n            </button>\r\n\r\n            <input\r\n              className={styles.SearchFormInput}\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              placeholder=\"Search images and photos\"\r\n              value={this.state.query}\r\n              onChange={this.handleChange}\r\n            />\r\n          </form>\r\n        </header>\r\n      </>\r\n    );\r\n  }\r\n}\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\nexport default Loader;","import React from 'react';\r\nimport styles from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Button({ fetchImages }) {\r\n  return (\r\n    <button type=\"articles\" className={styles.Button} onClick={fetchImages}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\nButton.propTypes = {\r\n  fetchImages: PropTypes.func.isRequired,\r\n};\r\nexport default Button;\r\n","import React from 'react';\r\nimport styles from \"./ImageItem.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function ImageItem({ webformatURL, onSetImageLarge, largeImageURL}) {\r\n  return <img src={webformatURL} alt=\"\" className={styles.ImageGalleryItemImage} onClick={() => onSetImageLarge(largeImageURL)}/>;\r\n}\r\n\r\nImageItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  onSetImageLarge: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ImageItem from '../ImageItem/ImageItem';\r\nimport styles from './ImageGallery.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ImageGallery({ images, onSetImageLarge }) {\r\n  return (\r\n    <ul className={styles.ImageGallery}>\r\n      {images.map(({ largeImageURL, webformatURL }) => (\r\n        <li className={styles.ImageGalleryItem} key={largeImageURL}>\r\n          <ImageItem\r\n            webformatURL={webformatURL}\r\n            largeImageURL={largeImageURL}\r\n            onSetImageLarge={onSetImageLarge}\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({ largeImageURL: PropTypes.string.isRequired }),\r\n  ).isRequired,\r\n  onSetImageLarge: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import React, { Component } from 'react';\r\nimport styles from './Modal.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', e => {\r\n      if (e.code === 'Escape') {\r\n        this.props.onClose();\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={styles.Overlay}>\r\n        <div className={styles.Modal}>{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\nexport default Modal;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageModal = ({largeImage}) => (\r\n    <img src={largeImage} alt=\"\" />\r\n)\r\nImageModal.defaultProps = {\r\n    largeImage:\r\n      'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder',\r\n  };\r\n  \r\nImageModal.propTypes = {\r\n    largeImage: PropTypes.string.isRequired,\r\n  };\r\nexport default ImageModal;\r\n\r\n","import axios from 'axios';\r\n\r\nconst FetchImagesWithQuery = (searchQuery, page = 0, apiKey = '17718415-abf6596e447b0ee9bedcd0b67') =>{\r\n    return axios\r\n     .get(`https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${apiKey}&image_type=photo&orientation=horizontal&per_page=12`)\r\n    .then(response => response.data.hits);\r\n}\r\n\r\n\r\nexport default {\r\n    FetchImagesWithQuery,\r\n}\r\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport Searchbar from './components/Searchbar/Searchbar';\nimport Loader from './components/Loader/Loader';\nimport Button from './components/Button/Button';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Modal from './components/Modal/Modal';\nimport ImageModal from './components/ImageModal/ImageModal';\n\nimport imagesApi from './services/api';\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    isLoading: false,\n    error: null,\n    searchQuery: '',\n    page: 0,\n    largeImage: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n    const prevImages = prevState.images;\n    const nextImages = this.state.images;\n    if (prevQuery !== nextQuery) {\n      this.fetchImages(nextQuery);\n    }\n    if (prevImages !== nextImages) {\n      this.scroll();\n    }\n  }\n  scroll() {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n  fetchImages = () => {\n    this.setState({ isLoading: true });\n    imagesApi\n      .FetchImagesWithQuery(this.state.searchQuery, this.state.page)\n      .then(images =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n  handlerSearchFormSubmit = query => {\n    this.setState({ searchQuery: query, page: 1, images: [] });\n  };\n\n  toggleModal = () => {\n    this.setState(() => ({ largeImage: null }));\n  };\n\n  setlargeImage = url => {\n    this.setState({ largeImage: url });\n  };\n  render() {\n    const { images, isLoading, largeImage } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.handlerSearchFormSubmit} />\n\n        {images.length > 0 && (\n          <ImageGallery images={images} onSetImageLarge={this.setlargeImage} />\n        )}\n        {isLoading && (\n          <Loader\n            type=\"Circles\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000}\n          />\n        )}\n        {images.length > 0 && <Button fetchImages={this.fetchImages} />}\n        {largeImage && (\n          <Modal onClose={this.toggleModal}>\n            <ImageModal largeImage={largeImage} />\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__2-RTr\",\"ImageGalleryItem\":\"ImageGallery_ImageGalleryItem__1aseF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1eEvk\",\"Modal\":\"Modal_Modal__17wEQ\"};"],"sourceRoot":""}